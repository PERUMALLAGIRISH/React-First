Using the Link component
We are going to use the Link component from React Router to create our navigation options by carrying out the following steps:

Let's start by creating a new file called Header.tsx with the following imports:
import * as React from "react";
import { Link } from "react-router-dom";

import logo from "./logo.svg";
Let's create two links using the Link component in a Header function component:
const Header: React.SFC = () => {
  return (
    <header className="header">
      <img src={logo} className="header-logo" alt="logo" />
      <h1 className="header-title">React Shop</h1>
      <nav>
        <Link to="/products" className="header-
         link">Products</Link>
        <Link to="/admin" className="header-link">Admin</Link>
      </nav>
    </header>
  );
};

export default Header;
The Link component allows us to define the path where the link navigates to as well as the text to display.
We've referenced some CSS classes, so, let's add these to index.css:
.header {
  text-align: center;
  background-color: #222;
  height: 160px;
  padding: 20px;
  color: white;
}

.header-logo {
  animation: header-logo-spin infinite 20s linear;
  height: 80px;
}

@keyframes header-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.header-title {
  font-size: 1.5em;
}

.header-link {
  color: #fff;
  text-decoration: none;
  padding: 5px;
}
 Now that our Header component is in place, let's import into Routes.tsx:
import Header from "./Header";
We can then use it in the JSX as follows:
<Router>
  <div>
    <Header />
    <Route path="/products" component={ProductsPage} />
    <Route path="/admin" component={AdminPage} />
  </div>
</Router>
If we examine the running app, it should look like the following screenshot with a nice header and two navigation options to go to our Products and Admin pages rendered:


Try clicking the navigation options â€” they work! If we inspect the Products and Admin elements using the browser Developer tools, we see that React Router has rendered them as anchor tags:


If we look at the Network tab in Developer tools while clicking the navigation options, we'll see no network request is being made to serve the pages. This shows that React Router is handling the navigation for us in our React app.
